#!/bin/bash

# üöÄ Script de d√©ploiement des Edge Functions Supabase
# Ce script d√©ploie automatiquement les Edge Functions n√©cessaires pour Opportunity

echo "üöÄ D√©ploiement des Edge Functions Supabase pour Opportunity"
echo "============================================================"
echo ""

# V√©rifier si Supabase CLI est install√©
if ! command -v supabase &> /dev/null; then
    echo "‚ùå Supabase CLI n'est pas install√©."
    echo ""
    echo "Installation automatique..."
    npm install -g supabase
    
    if [ $? -ne 0 ]; then
        echo "‚ùå √âchec de l'installation. Installez manuellement avec :"
        echo "   npm install -g supabase"
        exit 1
    fi
    echo "‚úÖ Supabase CLI install√© avec succ√®s"
fi

# V√©rifier la connexion
echo ""
echo "üì° V√©rification de la connexion Supabase..."

if ! supabase projects list &> /dev/null; then
    echo "‚ö†Ô∏è  Vous n'√™tes pas connect√© √† Supabase."
    echo ""
    echo "Connexion en cours..."
    supabase login
    
    if [ $? -ne 0 ]; then
        echo "‚ùå √âchec de la connexion. Veuillez vous connecter manuellement avec :"
        echo "   supabase login"
        exit 1
    fi
fi

echo "‚úÖ Connect√© √† Supabase"

# Lier le projet
PROJECT_REF="pwmxkcijsrykjvxnzxnt"
echo ""
echo "üîó Liaison au projet $PROJECT_REF..."

supabase link --project-ref $PROJECT_REF

if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  √âchec de la liaison. Le projet est peut-√™tre d√©j√† li√©."
fi

# Configurer les secrets (optionnel - comment√© par d√©faut)
echo ""
echo "üîë Configuration des secrets..."
echo "‚ö†Ô∏è  Note: Assurez-vous que les secrets suivants sont configur√©s :"
echo "   - SUPABASE_URL"
echo "   - SUPABASE_SERVICE_ROLE_KEY"
echo "   - SUPABASE_ANON_KEY"
echo "   - SUPABASE_DB_URL"
echo ""
echo "Pour configurer les secrets, utilisez :"
echo "   supabase secrets set NOM_SECRET=valeur"
echo ""
read -p "Les secrets sont-ils d√©j√† configur√©s ? (o/N) " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Oo]$ ]]; then
    echo "‚ö†Ô∏è  Veuillez configurer les secrets avant de continuer."
    echo "   Allez dans : https://supabase.com/dashboard/project/$PROJECT_REF/settings/functions"
    echo "   Ou utilisez : supabase secrets set NOM_SECRET=valeur"
    exit 1
fi

# D√©ployer la fonction
echo ""
echo "üì¶ D√©ploiement de la fonction 'server'..."

supabase functions deploy server

if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå √âchec du d√©ploiement."
    echo ""
    echo "V√©rifications √† faire :"
    echo "  1. Le dossier /supabase/functions/server/ existe"
    echo "  2. Le fichier index.tsx est pr√©sent"
    echo "  3. Vous avez les droits n√©cessaires"
    exit 1
fi

echo ""
echo "‚úÖ Fonction d√©ploy√©e avec succ√®s !"

# Test de la fonction
echo ""
echo "üß™ Test de la fonction..."

FUNCTION_URL="https://$PROJECT_REF.supabase.co/functions/v1/make-server-b90be4d1/health"
echo "   URL: $FUNCTION_URL"

HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $FUNCTION_URL)

if [ "$HTTP_STATUS" -eq 200 ]; then
    echo "‚úÖ La fonction r√©pond correctement (HTTP $HTTP_STATUS)"
    
    # Afficher la r√©ponse
    echo ""
    echo "R√©ponse du serveur :"
    curl -s $FUNCTION_URL | python3 -m json.tool || curl -s $FUNCTION_URL
else
    echo "‚ö†Ô∏è  La fonction ne r√©pond pas correctement (HTTP $HTTP_STATUS)"
    echo ""
    echo "Attendez 30 secondes (cold start) et testez √† nouveau avec :"
    echo "   curl $FUNCTION_URL"
fi

# Afficher les logs
echo ""
echo "üìä Logs r√©cents de la fonction :"
supabase functions logs server --limit 10

echo ""
echo "============================================================"
echo "üéâ D√©ploiement termin√© !"
echo ""
echo "Prochaines √©tapes :"
echo "  1. Rafra√Æchissez votre application web"
echo "  2. Allez dans le panel admin"
echo "  3. Essayez de cr√©er un cr√©neau"
echo ""
echo "Pour voir les logs en temps r√©el :"
echo "   supabase functions logs server --follow"
echo ""
echo "Pour d√©ployer √† nouveau :"
echo "   supabase functions deploy server"
echo ""
